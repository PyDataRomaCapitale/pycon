name: Frontend

on:
  pull_request:
    paths:
    - 'backend/**/*'
    - 'backend/*'
    - 'frontend/**/*'
    - 'frontend/*'
    - 'netlify.toml'

jobs:
  eslint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master

    - name: ESLint checks
      uses: ./.github/eslint-action
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  check-and-preview:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-python@v1
      with:
        python-version: '3.7.4'
    - run: pip install poetry
    - name: Install dependencies
      working-directory: backend
      run: poetry install --no-dev
    - run: yarn
      working-directory: frontend
    - run: |
        cd backend/
        poetry run python manage.py migrate
        poetry run python manage.py loaddata \
            demodata/*.json
        cp -r demodata/media media
        poetry run python manage.py runserver &

        cd ../frontend/
        yarn build

        yarn codegen
      env:
        SECRET_KEY: demo
        AWS_MEDIA_BUCKET: demo
        DEFAULT_FILE_STORAGE: 'django.core.files.storage.FileSystemStorage'
        DEBUG: True
        CONFERENCE_CODE: "pycon-demo"
    - run: yarn tsc
      working-directory: frontend
    - uses: netlify/actions/cli@master
      with:
        args: deploy --dir=frontend/public
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  preview-docs:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master
    - run: yarn
      working-directory: frontend
    - run: yarn build:docz
      working-directory: frontend
    - uses: netlify/actions/cli@master
      with:
        args: deploy --dir=frontend/.docz/dist
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID_DOCS }}
